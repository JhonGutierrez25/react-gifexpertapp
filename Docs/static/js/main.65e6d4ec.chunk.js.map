{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","helpers/hooks/UseFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OAEI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEIJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAiB,SAAAS,GAAI,OAAOP,GAAP,mBAAsBO,OAC3CN,EAAc,OAOd,2BACIO,KAAM,OACNC,MAAST,EACTU,SAnBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,Y,uBCPnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCANO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIjC,OACI,yBAAKc,UAAY,0CACb,yBAAKC,IAAQf,EAAMgB,IAAQN,IAC3B,2BAAKA,KCJLO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGtB,ECJwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAyBA,OApBAC,qBAAW,WAEPxB,EAASC,GACRwB,MAAM,SAAAC,GAEHC,YAAW,WAEPC,QAAQC,IAAIH,GACZH,EAAU,CACNf,KAAMkB,EACNL,SAAS,MAGd,UAGT,CAAEpB,IAIGqB,EDvBwBQ,CAAc7B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAMpB,OACI,oCACA,wBAAIJ,UAAW,qCAAf,IAAuDhB,EAAvD,KAEEoB,GAAW,uBAAGJ,UAAW,oCAAd,WAEb,yBAAKA,UAAY,aAELH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAoB,IAAQpB,EAAIC,IACPD,UEnBhBqB,EAAe,WAExB,MAAoC7C,mBAAS,CAAC,cAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAEA,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAGI,4BAES+C,EAAWvB,KAAK,SAAAT,GAAQ,OACrB,kBAAC,EAAD,CACA8B,IAAQ9B,EACRA,SAAaA,U,MChBzCiC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.65e6d4ec.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types' \r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [InputValue, setInputValue] = useState('');\r\n\r\n    const HandleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    };\r\n\r\n    const HandleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if  ( InputValue.trim().length > 2 ){\r\n            setCategories(  (cats => [  InputValue, ...cats ])  );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit = {HandleSubmit}>\r\n            <input \r\n                type= \"text\"\r\n                value= { InputValue }\r\n                onChange = { HandleInputChange }\r\n            />\r\n        </form>\r\n      \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=O35GH27TqTWzKlGUTxdzezMhfkDLEXPE`\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n  \r\n\r\n\r\n}"," import React from 'react'\r\n \r\n export const GifGridItem = ({ title, url }) => {\r\n\r\n    // console.log( title, url );\r\n\r\n     return (\r\n         <div className = \"card animate__animated animate__fadeIn\">\r\n             <img src = { url } alt = { title } />\r\n             <p>{ title }</p>\r\n         </div>\r\n     )\r\n }\r\n ","import React from 'react'\r\nimport { useFetchGifs } from '../helpers/hooks/UseFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n//    const [images, setImages] = useState([]);\r\n    const {data:images, loading} = useFetchGifs( category );\r\n\r\n\r\n    \r\n\r\n\r\n    return ( \r\n        <>\r\n        <h3 className= \"animate__animated animate__fadeIn\" > { category } </h3>\r\n\r\n        { loading && <p className= \"animate__animated animate__flash\">Loading</p> }\r\n\r\n        <div className = \"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                        key = { img.id } \r\n                        { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\n\r\nimport { getGifs } from \"../getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n        .then( imgs => {\r\n\r\n            setTimeout(() => {\r\n\r\n                console.log(imgs);\r\n                setState( {\r\n                    data: imgs,\r\n                    loading: false\r\n                }); \r\n\r\n            }, 3000);\r\n        })\r\n\r\n    },[ category ])\r\n\r\n\r\n\r\n    return state; // data: [],  loading: true\r\n\r\n}\r\n ","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories= { setCategories }/>\r\n            <hr />\r\n           \r\n            \r\n                <ol>\r\n                    {\r\n                         categories.map( category  => (\r\n                            <GifGrid \r\n                            key = { category }\r\n                            category = { category } \r\n                            />\r\n                        ))\r\n                    }\r\n                </ol>\r\n            \r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}